// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package cli

import (
	"github.com/breadchris/sifty/pkg/config"
	"github.com/breadchris/sifty/pkg/pipeline/normalize"
	"github.com/breadchris/sifty/pkg/pipeline/text"
	python2 "github.com/breadchris/sifty/pkg/python"
	"github.com/urfave/cli/v2"
)

// Injectors from wire.go:

func Wire() (*cli.App, error) {
	provider, err := config.NewConfigProvider()
	if err != nil {
		return nil, err
	}
	pythonConfig, err := python2.NewConfig(provider)
	if err != nil {
		return nil, err
	}
	pythonClient, err := python2.NewPythonClient(pythonConfig)
	if err != nil {
		return nil, err
	}
	audioNormalizer, err := normalize.NewAudioNormalizer(pythonClient)
	if err != nil {
		return nil, err
	}
	summarizer, err := text.NewSummarizer(pythonClient)
	if err != nil {
		return nil, err
	}
	app := NewApp(audioNormalizer, summarizer)
	return app, nil
}
